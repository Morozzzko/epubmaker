# frozen_string_literal: true

require 'gepub'
require 'etc'
require 'securerandom'

module EPUBMaker
  module CLI
    module Commands
      module Generate
        class EPUB < Dry::CLI::Command
          argument :path, type: :string, required: true, desc: 'Full destination path for epub'

          def call(path:, **)
            book = GEPUB::Book.new('OEBPS/content.opf')

            book_meta = ask_for_required_book_meta

            fill_book(book, book_meta)

            book.generate_epub(path)

            prompt.say("Created epub at #{path}")
          end

          private

          def ask_for_required_book_meta
            prompt.say('We need some information about the book to proceed')

            prompt.collect do
              key(:language).ask('Language', required: true, default: 'en')
              key(:title).ask('Title', required: true, default: "The book by #{Etc.getlogin}")
              key(:primary_identifier).ask('Primary identifier', required: true, default: SecureRandom.uuid)
            end
          end

          def fill_book(book, book_meta)
            book.primary_identifier(book_meta[:primary_identifier])
            book.language = book_meta[:language]
            book.add_title(book_meta[:title])

            book.ordered do
              book.add_item('text/cover.xhtml', content: StringIO.new(<<~XHTML))
                <html xmlns="http://www.w3.org/1999/xhtml">
                  <head>
                    <title>Book generated by EPUBMaker</title>
                  </head>
                  <body>
                    <h1>This page is intentionally left blank</h1>
                  </body>
                </html>
              XHTML
            end
          end
        end
      end
    end
  end
end
